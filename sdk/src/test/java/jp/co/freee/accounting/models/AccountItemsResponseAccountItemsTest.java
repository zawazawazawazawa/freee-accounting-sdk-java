/*
 * freee API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package jp.co.freee.accounting.models;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for AccountItemsResponseAccountItems
 */
public class AccountItemsResponseAccountItemsTest {
    private final AccountItemsResponseAccountItems model = new AccountItemsResponseAccountItems();

    /**
     * Model tests for AccountItemsResponseAccountItems
     */
    @Test
    public void testAccountItemsResponseAccountItems() {
        // TODO: test AccountItemsResponseAccountItems
    }

    /**
     * Test the property 'accountCategory'
     */
    @Test
    public void accountCategoryTest() {
        // TODO: test accountCategory
    }

    /**
     * Test the property 'accountCategoryId'
     */
    @Test
    public void accountCategoryIdTest() {
        // TODO: test accountCategoryId
    }

    /**
     * Test the property 'available'
     */
    @Test
    public void availableTest() {
        // TODO: test available
    }

    /**
     * Test the property 'categories'
     */
    @Test
    public void categoriesTest() {
        // TODO: test categories
    }

    /**
     * Test the property 'correspondingExpenseId'
     */
    @Test
    public void correspondingExpenseIdTest() {
        // TODO: test correspondingExpenseId
    }

    /**
     * Test the property 'correspondingExpenseName'
     */
    @Test
    public void correspondingExpenseNameTest() {
        // TODO: test correspondingExpenseName
    }

    /**
     * Test the property 'correspondingIncomeId'
     */
    @Test
    public void correspondingIncomeIdTest() {
        // TODO: test correspondingIncomeId
    }

    /**
     * Test the property 'correspondingIncomeName'
     */
    @Test
    public void correspondingIncomeNameTest() {
        // TODO: test correspondingIncomeName
    }

    /**
     * Test the property 'defaultTaxCode'
     */
    @Test
    public void defaultTaxCodeTest() {
        // TODO: test defaultTaxCode
    }

    /**
     * Test the property 'defaultTaxId'
     */
    @Test
    public void defaultTaxIdTest() {
        // TODO: test defaultTaxId
    }

    /**
     * Test the property 'groupName'
     */
    @Test
    public void groupNameTest() {
        // TODO: test groupName
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'shortcut'
     */
    @Test
    public void shortcutTest() {
        // TODO: test shortcut
    }

    /**
     * Test the property 'shortcutNum'
     */
    @Test
    public void shortcutNumTest() {
        // TODO: test shortcutNum
    }

    /**
     * Test the property 'taxCode'
     */
    @Test
    public void taxCodeTest() {
        // TODO: test taxCode
    }

    /**
     * Test the property 'walletableId'
     */
    @Test
    public void walletableIdTest() {
        // TODO: test walletableId
    }

}
