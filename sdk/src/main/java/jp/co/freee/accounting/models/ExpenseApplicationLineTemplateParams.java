/*
 * freee API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package jp.co.freee.accounting.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ExpenseApplicationLineTemplateParams
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ExpenseApplicationLineTemplateParams {
  public static final String SERIALIZED_NAME_ACCOUNT_ITEM_ID = "account_item_id";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_ITEM_ID)
  private Integer accountItemId;

  public static final String SERIALIZED_NAME_COMPANY_ID = "company_id";
  @SerializedName(SERIALIZED_NAME_COMPANY_ID)
  private Integer companyId;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_ITEM_ID = "item_id";
  @SerializedName(SERIALIZED_NAME_ITEM_ID)
  private Integer itemId;

  public static final String SERIALIZED_NAME_LINE_DESCRIPTION = "line_description";
  @SerializedName(SERIALIZED_NAME_LINE_DESCRIPTION)
  private String lineDescription;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_REQUIRED_RECEIPT = "required_receipt";
  @SerializedName(SERIALIZED_NAME_REQUIRED_RECEIPT)
  private Boolean requiredReceipt;

  public static final String SERIALIZED_NAME_TAX_CODE = "tax_code";
  @SerializedName(SERIALIZED_NAME_TAX_CODE)
  private Integer taxCode;

  public ExpenseApplicationLineTemplateParams() { 
  }

  public ExpenseApplicationLineTemplateParams accountItemId(Integer accountItemId) {
    
    this.accountItemId = accountItemId;
    return this;
  }

   /**
   * 勘定科目ID
   * minimum: 1
   * maximum: 2147483647
   * @return accountItemId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "1", required = true, value = "勘定科目ID")

  public Integer getAccountItemId() {
    return accountItemId;
  }


  public void setAccountItemId(Integer accountItemId) {
    this.accountItemId = accountItemId;
  }


  public ExpenseApplicationLineTemplateParams companyId(Integer companyId) {
    
    this.companyId = companyId;
    return this;
  }

   /**
   * 事業所ID
   * minimum: 1
   * maximum: 2147483647
   * @return companyId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "1", required = true, value = "事業所ID")

  public Integer getCompanyId() {
    return companyId;
  }


  public void setCompanyId(Integer companyId) {
    this.companyId = companyId;
  }


  public ExpenseApplicationLineTemplateParams description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * 経費科目の説明 (1000文字以内)
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "電車、バス、飛行機などの交通費", value = "経費科目の説明 (1000文字以内)")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public ExpenseApplicationLineTemplateParams itemId(Integer itemId) {
    
    this.itemId = itemId;
    return this;
  }

   /**
   * 品目ID
   * minimum: 1
   * maximum: 2147483647
   * @return itemId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "品目ID")

  public Integer getItemId() {
    return itemId;
  }


  public void setItemId(Integer itemId) {
    this.itemId = itemId;
  }


  public ExpenseApplicationLineTemplateParams lineDescription(String lineDescription) {
    
    this.lineDescription = lineDescription;
    return this;
  }

   /**
   * 内容の補足 (1000文字以内)
   * @return lineDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "移動区間", value = "内容の補足 (1000文字以内)")

  public String getLineDescription() {
    return lineDescription;
  }


  public void setLineDescription(String lineDescription) {
    this.lineDescription = lineDescription;
  }


  public ExpenseApplicationLineTemplateParams name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * 経費科目名 (100文字以内)
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "交通費", required = true, value = "経費科目名 (100文字以内)")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public ExpenseApplicationLineTemplateParams requiredReceipt(Boolean requiredReceipt) {
    
    this.requiredReceipt = requiredReceipt;
    return this;
  }

   /**
   * 添付ファイルの必須/任意
   * @return requiredReceipt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "添付ファイルの必須/任意")

  public Boolean getRequiredReceipt() {
    return requiredReceipt;
  }


  public void setRequiredReceipt(Boolean requiredReceipt) {
    this.requiredReceipt = requiredReceipt;
  }


  public ExpenseApplicationLineTemplateParams taxCode(Integer taxCode) {
    
    this.taxCode = taxCode;
    return this;
  }

   /**
   * 税区分コード（税区分のdisplay_categoryがtax_5: 5%表示の税区分, tax_r8: 軽減税率8%表示の税区分に該当するtax_codeのみ利用可能です。税区分のdisplay_categoryは /taxes/companies/{:company_id}のAPIから取得可能です。）
   * minimum: 0
   * maximum: 2147483647
   * @return taxCode
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "1", required = true, value = "税区分コード（税区分のdisplay_categoryがtax_5: 5%表示の税区分, tax_r8: 軽減税率8%表示の税区分に該当するtax_codeのみ利用可能です。税区分のdisplay_categoryは /taxes/companies/{:company_id}のAPIから取得可能です。）")

  public Integer getTaxCode() {
    return taxCode;
  }


  public void setTaxCode(Integer taxCode) {
    this.taxCode = taxCode;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExpenseApplicationLineTemplateParams expenseApplicationLineTemplateParams = (ExpenseApplicationLineTemplateParams) o;
    return Objects.equals(this.accountItemId, expenseApplicationLineTemplateParams.accountItemId) &&
        Objects.equals(this.companyId, expenseApplicationLineTemplateParams.companyId) &&
        Objects.equals(this.description, expenseApplicationLineTemplateParams.description) &&
        Objects.equals(this.itemId, expenseApplicationLineTemplateParams.itemId) &&
        Objects.equals(this.lineDescription, expenseApplicationLineTemplateParams.lineDescription) &&
        Objects.equals(this.name, expenseApplicationLineTemplateParams.name) &&
        Objects.equals(this.requiredReceipt, expenseApplicationLineTemplateParams.requiredReceipt) &&
        Objects.equals(this.taxCode, expenseApplicationLineTemplateParams.taxCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountItemId, companyId, description, itemId, lineDescription, name, requiredReceipt, taxCode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExpenseApplicationLineTemplateParams {\n");
    sb.append("    accountItemId: ").append(toIndentedString(accountItemId)).append("\n");
    sb.append("    companyId: ").append(toIndentedString(companyId)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    itemId: ").append(toIndentedString(itemId)).append("\n");
    sb.append("    lineDescription: ").append(toIndentedString(lineDescription)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    requiredReceipt: ").append(toIndentedString(requiredReceipt)).append("\n");
    sb.append("    taxCode: ").append(toIndentedString(taxCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

