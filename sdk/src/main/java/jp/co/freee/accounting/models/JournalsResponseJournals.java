/*
 * freee API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package jp.co.freee.accounting.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import jp.co.freee.accounting.models.JournalsResponseJournalsUpToDateReasons;

/**
 * JournalsResponseJournals
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class JournalsResponseJournals {
  public static final String SERIALIZED_NAME_COMPANY_ID = "company_id";
  @SerializedName(SERIALIZED_NAME_COMPANY_ID)
  private Integer companyId;

  /**
   * ダウンロード形式
   */
  @JsonAdapter(DownloadTypeEnum.Adapter.class)
  public enum DownloadTypeEnum {
    CSV("csv"),
    
    GENERIC("generic"),
    
    PDF("pdf");

    private String value;

    DownloadTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DownloadTypeEnum fromValue(String value) {
      for (DownloadTypeEnum b : DownloadTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<DownloadTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DownloadTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DownloadTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return DownloadTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_DOWNLOAD_TYPE = "download_type";
  @SerializedName(SERIALIZED_NAME_DOWNLOAD_TYPE)
  private DownloadTypeEnum downloadType;

  public static final String SERIALIZED_NAME_END_DATE = "end_date";
  @SerializedName(SERIALIZED_NAME_END_DATE)
  private String endDate;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_MESSAGES = "messages";
  @SerializedName(SERIALIZED_NAME_MESSAGES)
  private List<String> messages = null;

  public static final String SERIALIZED_NAME_START_DATE = "start_date";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  private String startDate;

  public static final String SERIALIZED_NAME_STATUS_URL = "status_url";
  @SerializedName(SERIALIZED_NAME_STATUS_URL)
  private String statusUrl;

  public static final String SERIALIZED_NAME_UP_TO_DATE = "up_to_date";
  @SerializedName(SERIALIZED_NAME_UP_TO_DATE)
  private Boolean upToDate;

  public static final String SERIALIZED_NAME_UP_TO_DATE_REASONS = "up_to_date_reasons";
  @SerializedName(SERIALIZED_NAME_UP_TO_DATE_REASONS)
  private List<JournalsResponseJournalsUpToDateReasons> upToDateReasons = null;

  /**
   * 追加出力するID項目
   */
  @JsonAdapter(VisibleIdsEnum.Adapter.class)
  public enum VisibleIdsEnum {
    DEAL_ID("deal_id"),
    
    TRANSFER_ID("transfer_id"),
    
    MANUAL_JOURNAL_ID("manual_journal_id");

    private String value;

    VisibleIdsEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static VisibleIdsEnum fromValue(String value) {
      for (VisibleIdsEnum b : VisibleIdsEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<VisibleIdsEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final VisibleIdsEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public VisibleIdsEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return VisibleIdsEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_VISIBLE_IDS = "visible_ids";
  @SerializedName(SERIALIZED_NAME_VISIBLE_IDS)
  private List<VisibleIdsEnum> visibleIds = null;

  /**
   * 補助科目やコメントとして出力する項目
   */
  @JsonAdapter(VisibleTagsEnum.Adapter.class)
  public enum VisibleTagsEnum {
    PARTNER("partner"),
    
    ITEM("item"),
    
    TAG("tag"),
    
    SECTION("section"),
    
    DESCRIPTION("description"),
    
    WALLET_TXN_DESCRIPTION("wallet_txn_description"),
    
    ALL("all"),
    
    SEGMENT_1_TAG("segment_1_tag"),
    
    SEGMENT_2_TAG("segment_2_tag"),
    
    SEGMENT_3_TAG("segment_3_tag");

    private String value;

    VisibleTagsEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static VisibleTagsEnum fromValue(String value) {
      for (VisibleTagsEnum b : VisibleTagsEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<VisibleTagsEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final VisibleTagsEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public VisibleTagsEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return VisibleTagsEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_VISIBLE_TAGS = "visible_tags";
  @SerializedName(SERIALIZED_NAME_VISIBLE_TAGS)
  private List<VisibleTagsEnum> visibleTags = null;

  public JournalsResponseJournals() { 
  }

  public JournalsResponseJournals companyId(Integer companyId) {
    
    this.companyId = companyId;
    return this;
  }

   /**
   * 事業所ID
   * minimum: 1
   * maximum: 2147483647
   * @return companyId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "1", required = true, value = "事業所ID")

  public Integer getCompanyId() {
    return companyId;
  }


  public void setCompanyId(Integer companyId) {
    this.companyId = companyId;
  }


  public JournalsResponseJournals downloadType(DownloadTypeEnum downloadType) {
    
    this.downloadType = downloadType;
    return this;
  }

   /**
   * ダウンロード形式
   * @return downloadType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "csv", value = "ダウンロード形式")

  public DownloadTypeEnum getDownloadType() {
    return downloadType;
  }


  public void setDownloadType(DownloadTypeEnum downloadType) {
    this.downloadType = downloadType;
  }


  public JournalsResponseJournals endDate(String endDate) {
    
    this.endDate = endDate;
    return this;
  }

   /**
   * 取得終了日 (yyyy-mm-dd)
   * @return endDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2019-12-17", value = "取得終了日 (yyyy-mm-dd)")

  public String getEndDate() {
    return endDate;
  }


  public void setEndDate(String endDate) {
    this.endDate = endDate;
  }


  public JournalsResponseJournals id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * 受け付けID
   * minimum: 1
   * maximum: 2147483647
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "1", required = true, value = "受け付けID")

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    this.id = id;
  }


  public JournalsResponseJournals messages(List<String> messages) {
    
    this.messages = messages;
    return this;
  }

  public JournalsResponseJournals addMessagesItem(String messagesItem) {
    if (this.messages == null) {
      this.messages = new ArrayList<>();
    }
    this.messages.add(messagesItem);
    return this;
  }

   /**
   * Get messages
   * @return messages
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getMessages() {
    return messages;
  }


  public void setMessages(List<String> messages) {
    this.messages = messages;
  }


  public JournalsResponseJournals startDate(String startDate) {
    
    this.startDate = startDate;
    return this;
  }

   /**
   * 取得開始日 (yyyy-mm-dd)
   * @return startDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2019-12-17", value = "取得開始日 (yyyy-mm-dd)")

  public String getStartDate() {
    return startDate;
  }


  public void setStartDate(String startDate) {
    this.startDate = startDate;
  }


  public JournalsResponseJournals statusUrl(String statusUrl) {
    
    this.statusUrl = statusUrl;
    return this;
  }

   /**
   * ステータス確認用URL
   * @return statusUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "https://api.freee.co.jp/api/1/journals/reports/4/status", value = "ステータス確認用URL")

  public String getStatusUrl() {
    return statusUrl;
  }


  public void setStatusUrl(String statusUrl) {
    this.statusUrl = statusUrl;
  }


  public JournalsResponseJournals upToDate(Boolean upToDate) {
    
    this.upToDate = upToDate;
    return this;
  }

   /**
   * 集計結果が最新かどうか
   * @return upToDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "集計結果が最新かどうか")

  public Boolean getUpToDate() {
    return upToDate;
  }


  public void setUpToDate(Boolean upToDate) {
    this.upToDate = upToDate;
  }


  public JournalsResponseJournals upToDateReasons(List<JournalsResponseJournalsUpToDateReasons> upToDateReasons) {
    
    this.upToDateReasons = upToDateReasons;
    return this;
  }

  public JournalsResponseJournals addUpToDateReasonsItem(JournalsResponseJournalsUpToDateReasons upToDateReasonsItem) {
    if (this.upToDateReasons == null) {
      this.upToDateReasons = new ArrayList<>();
    }
    this.upToDateReasons.add(upToDateReasonsItem);
    return this;
  }

   /**
   * 集計が最新でない場合の要因情報
   * @return upToDateReasons
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "集計が最新でない場合の要因情報")

  public List<JournalsResponseJournalsUpToDateReasons> getUpToDateReasons() {
    return upToDateReasons;
  }


  public void setUpToDateReasons(List<JournalsResponseJournalsUpToDateReasons> upToDateReasons) {
    this.upToDateReasons = upToDateReasons;
  }


  public JournalsResponseJournals visibleIds(List<VisibleIdsEnum> visibleIds) {
    
    this.visibleIds = visibleIds;
    return this;
  }

  public JournalsResponseJournals addVisibleIdsItem(VisibleIdsEnum visibleIdsItem) {
    if (this.visibleIds == null) {
      this.visibleIds = new ArrayList<>();
    }
    this.visibleIds.add(visibleIdsItem);
    return this;
  }

   /**
   * Get visibleIds
   * @return visibleIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<VisibleIdsEnum> getVisibleIds() {
    return visibleIds;
  }


  public void setVisibleIds(List<VisibleIdsEnum> visibleIds) {
    this.visibleIds = visibleIds;
  }


  public JournalsResponseJournals visibleTags(List<VisibleTagsEnum> visibleTags) {
    
    this.visibleTags = visibleTags;
    return this;
  }

  public JournalsResponseJournals addVisibleTagsItem(VisibleTagsEnum visibleTagsItem) {
    if (this.visibleTags == null) {
      this.visibleTags = new ArrayList<>();
    }
    this.visibleTags.add(visibleTagsItem);
    return this;
  }

   /**
   * Get visibleTags
   * @return visibleTags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<VisibleTagsEnum> getVisibleTags() {
    return visibleTags;
  }


  public void setVisibleTags(List<VisibleTagsEnum> visibleTags) {
    this.visibleTags = visibleTags;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JournalsResponseJournals journalsResponseJournals = (JournalsResponseJournals) o;
    return Objects.equals(this.companyId, journalsResponseJournals.companyId) &&
        Objects.equals(this.downloadType, journalsResponseJournals.downloadType) &&
        Objects.equals(this.endDate, journalsResponseJournals.endDate) &&
        Objects.equals(this.id, journalsResponseJournals.id) &&
        Objects.equals(this.messages, journalsResponseJournals.messages) &&
        Objects.equals(this.startDate, journalsResponseJournals.startDate) &&
        Objects.equals(this.statusUrl, journalsResponseJournals.statusUrl) &&
        Objects.equals(this.upToDate, journalsResponseJournals.upToDate) &&
        Objects.equals(this.upToDateReasons, journalsResponseJournals.upToDateReasons) &&
        Objects.equals(this.visibleIds, journalsResponseJournals.visibleIds) &&
        Objects.equals(this.visibleTags, journalsResponseJournals.visibleTags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(companyId, downloadType, endDate, id, messages, startDate, statusUrl, upToDate, upToDateReasons, visibleIds, visibleTags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JournalsResponseJournals {\n");
    sb.append("    companyId: ").append(toIndentedString(companyId)).append("\n");
    sb.append("    downloadType: ").append(toIndentedString(downloadType)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    messages: ").append(toIndentedString(messages)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    statusUrl: ").append(toIndentedString(statusUrl)).append("\n");
    sb.append("    upToDate: ").append(toIndentedString(upToDate)).append("\n");
    sb.append("    upToDateReasons: ").append(toIndentedString(upToDateReasons)).append("\n");
    sb.append("    visibleIds: ").append(toIndentedString(visibleIds)).append("\n");
    sb.append("    visibleTags: ").append(toIndentedString(visibleTags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

