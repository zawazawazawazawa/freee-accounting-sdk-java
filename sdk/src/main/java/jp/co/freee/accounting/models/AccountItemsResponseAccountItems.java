/*
 * freee API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package jp.co.freee.accounting.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

/**
 * AccountItemsResponseAccountItems
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class AccountItemsResponseAccountItems {
  public static final String SERIALIZED_NAME_ACCOUNT_CATEGORY = "account_category";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_CATEGORY)
  private String accountCategory;

  public static final String SERIALIZED_NAME_ACCOUNT_CATEGORY_ID = "account_category_id";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_CATEGORY_ID)
  private Integer accountCategoryId;

  public static final String SERIALIZED_NAME_AVAILABLE = "available";
  @SerializedName(SERIALIZED_NAME_AVAILABLE)
  private Boolean available;

  public static final String SERIALIZED_NAME_CATEGORIES = "categories";
  @SerializedName(SERIALIZED_NAME_CATEGORIES)
  private List<String> categories = new ArrayList<>();

  public static final String SERIALIZED_NAME_CORRESPONDING_EXPENSE_ID = "corresponding_expense_id";
  @SerializedName(SERIALIZED_NAME_CORRESPONDING_EXPENSE_ID)
  private Integer correspondingExpenseId;

  public static final String SERIALIZED_NAME_CORRESPONDING_EXPENSE_NAME = "corresponding_expense_name";
  @SerializedName(SERIALIZED_NAME_CORRESPONDING_EXPENSE_NAME)
  private String correspondingExpenseName;

  public static final String SERIALIZED_NAME_CORRESPONDING_INCOME_ID = "corresponding_income_id";
  @SerializedName(SERIALIZED_NAME_CORRESPONDING_INCOME_ID)
  private Integer correspondingIncomeId;

  public static final String SERIALIZED_NAME_CORRESPONDING_INCOME_NAME = "corresponding_income_name";
  @SerializedName(SERIALIZED_NAME_CORRESPONDING_INCOME_NAME)
  private String correspondingIncomeName;

  public static final String SERIALIZED_NAME_DEFAULT_TAX_CODE = "default_tax_code";
  @SerializedName(SERIALIZED_NAME_DEFAULT_TAX_CODE)
  private Integer defaultTaxCode;

  public static final String SERIALIZED_NAME_DEFAULT_TAX_ID = "default_tax_id";
  @SerializedName(SERIALIZED_NAME_DEFAULT_TAX_ID)
  private Integer defaultTaxId;

  public static final String SERIALIZED_NAME_GROUP_NAME = "group_name";
  @SerializedName(SERIALIZED_NAME_GROUP_NAME)
  private String groupName;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_SHORTCUT = "shortcut";
  @SerializedName(SERIALIZED_NAME_SHORTCUT)
  private String shortcut;

  public static final String SERIALIZED_NAME_SHORTCUT_NUM = "shortcut_num";
  @SerializedName(SERIALIZED_NAME_SHORTCUT_NUM)
  private String shortcutNum;

  public static final String SERIALIZED_NAME_TAX_CODE = "tax_code";
  @SerializedName(SERIALIZED_NAME_TAX_CODE)
  private Integer taxCode;

  public static final String SERIALIZED_NAME_WALLETABLE_ID = "walletable_id";
  @SerializedName(SERIALIZED_NAME_WALLETABLE_ID)
  private Integer walletableId;

  public AccountItemsResponseAccountItems() { 
  }

  public AccountItemsResponseAccountItems accountCategory(String accountCategory) {
    
    this.accountCategory = accountCategory;
    return this;
  }

   /**
   * 勘定科目カテゴリー
   * @return accountCategory
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "現金・預金", required = true, value = "勘定科目カテゴリー")

  public String getAccountCategory() {
    return accountCategory;
  }


  public void setAccountCategory(String accountCategory) {
    this.accountCategory = accountCategory;
  }


  public AccountItemsResponseAccountItems accountCategoryId(Integer accountCategoryId) {
    
    this.accountCategoryId = accountCategoryId;
    return this;
  }

   /**
   * 勘定科目のカテゴリーID
   * minimum: 1
   * maximum: 2147483647
   * @return accountCategoryId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "1", required = true, value = "勘定科目のカテゴリーID")

  public Integer getAccountCategoryId() {
    return accountCategoryId;
  }


  public void setAccountCategoryId(Integer accountCategoryId) {
    this.accountCategoryId = accountCategoryId;
  }


  public AccountItemsResponseAccountItems available(Boolean available) {
    
    this.available = available;
    return this;
  }

   /**
   * 勘定科目の使用設定（true: 使用する、false: 使用しない）
   * @return available
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "true", required = true, value = "勘定科目の使用設定（true: 使用する、false: 使用しない）")

  public Boolean getAvailable() {
    return available;
  }


  public void setAvailable(Boolean available) {
    this.available = available;
  }


  public AccountItemsResponseAccountItems categories(List<String> categories) {
    
    this.categories = categories;
    return this;
  }

  public AccountItemsResponseAccountItems addCategoriesItem(String categoriesItem) {
    this.categories.add(categoriesItem);
    return this;
  }

   /**
   * Get categories
   * @return categories
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<String> getCategories() {
    return categories;
  }


  public void setCategories(List<String> categories) {
    this.categories = categories;
  }


  public AccountItemsResponseAccountItems correspondingExpenseId(Integer correspondingExpenseId) {
    
    this.correspondingExpenseId = correspondingExpenseId;
    return this;
  }

   /**
   * 支出取引相手勘定科目ID
   * @return correspondingExpenseId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "支出取引相手勘定科目ID")

  public Integer getCorrespondingExpenseId() {
    return correspondingExpenseId;
  }


  public void setCorrespondingExpenseId(Integer correspondingExpenseId) {
    this.correspondingExpenseId = correspondingExpenseId;
  }


  public AccountItemsResponseAccountItems correspondingExpenseName(String correspondingExpenseName) {
    
    this.correspondingExpenseName = correspondingExpenseName;
    return this;
  }

   /**
   * 支出取引相手勘定科目名
   * @return correspondingExpenseName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "買掛金", value = "支出取引相手勘定科目名")

  public String getCorrespondingExpenseName() {
    return correspondingExpenseName;
  }


  public void setCorrespondingExpenseName(String correspondingExpenseName) {
    this.correspondingExpenseName = correspondingExpenseName;
  }


  public AccountItemsResponseAccountItems correspondingIncomeId(Integer correspondingIncomeId) {
    
    this.correspondingIncomeId = correspondingIncomeId;
    return this;
  }

   /**
   * 収入取引相手勘定科目ID
   * @return correspondingIncomeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "収入取引相手勘定科目ID")

  public Integer getCorrespondingIncomeId() {
    return correspondingIncomeId;
  }


  public void setCorrespondingIncomeId(Integer correspondingIncomeId) {
    this.correspondingIncomeId = correspondingIncomeId;
  }


  public AccountItemsResponseAccountItems correspondingIncomeName(String correspondingIncomeName) {
    
    this.correspondingIncomeName = correspondingIncomeName;
    return this;
  }

   /**
   * 収入取引相手勘定科目名
   * @return correspondingIncomeName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "売掛金", value = "収入取引相手勘定科目名")

  public String getCorrespondingIncomeName() {
    return correspondingIncomeName;
  }


  public void setCorrespondingIncomeName(String correspondingIncomeName) {
    this.correspondingIncomeName = correspondingIncomeName;
  }


  public AccountItemsResponseAccountItems defaultTaxCode(Integer defaultTaxCode) {
    
    this.defaultTaxCode = defaultTaxCode;
    return this;
  }

   /**
   * デフォルト設定がされている税区分コード
   * minimum: 0
   * maximum: 2147483647
   * @return defaultTaxCode
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "34", required = true, value = "デフォルト設定がされている税区分コード")

  public Integer getDefaultTaxCode() {
    return defaultTaxCode;
  }


  public void setDefaultTaxCode(Integer defaultTaxCode) {
    this.defaultTaxCode = defaultTaxCode;
  }


  public AccountItemsResponseAccountItems defaultTaxId(Integer defaultTaxId) {
    
    this.defaultTaxId = defaultTaxId;
    return this;
  }

   /**
   * デフォルト設定がされている税区分ID
   * minimum: 1
   * maximum: 2147483647
   * @return defaultTaxId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "34", value = "デフォルト設定がされている税区分ID")

  public Integer getDefaultTaxId() {
    return defaultTaxId;
  }


  public void setDefaultTaxId(Integer defaultTaxId) {
    this.defaultTaxId = defaultTaxId;
  }


  public AccountItemsResponseAccountItems groupName(String groupName) {
    
    this.groupName = groupName;
    return this;
  }

   /**
   * 決算書表示名（小カテゴリー）
   * @return groupName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "売掛金", value = "決算書表示名（小カテゴリー）")

  public String getGroupName() {
    return groupName;
  }


  public void setGroupName(String groupName) {
    this.groupName = groupName;
  }


  public AccountItemsResponseAccountItems id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * 勘定科目ID
   * minimum: 1
   * maximum: 2147483647
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "1", required = true, value = "勘定科目ID")

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    this.id = id;
  }


  public AccountItemsResponseAccountItems name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * 勘定科目名 (30文字以内)
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "ソフトウェア", required = true, value = "勘定科目名 (30文字以内)")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public AccountItemsResponseAccountItems shortcut(String shortcut) {
    
    this.shortcut = shortcut;
    return this;
  }

   /**
   * ショートカット1 (20文字以内)
   * @return shortcut
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "SOFUTO", value = "ショートカット1 (20文字以内)")

  public String getShortcut() {
    return shortcut;
  }


  public void setShortcut(String shortcut) {
    this.shortcut = shortcut;
  }


  public AccountItemsResponseAccountItems shortcutNum(String shortcutNum) {
    
    this.shortcutNum = shortcutNum;
    return this;
  }

   /**
   * ショートカット2(勘定科目コード) (20文字以内)
   * @return shortcutNum
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "123", value = "ショートカット2(勘定科目コード) (20文字以内)")

  public String getShortcutNum() {
    return shortcutNum;
  }


  public void setShortcutNum(String shortcutNum) {
    this.shortcutNum = shortcutNum;
  }


  public AccountItemsResponseAccountItems taxCode(Integer taxCode) {
    
    this.taxCode = taxCode;
    return this;
  }

   /**
   * 税区分コード
   * minimum: 0
   * maximum: 2147483647
   * @return taxCode
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "1", required = true, value = "税区分コード")

  public Integer getTaxCode() {
    return taxCode;
  }


  public void setTaxCode(Integer taxCode) {
    this.taxCode = taxCode;
  }


  public AccountItemsResponseAccountItems walletableId(Integer walletableId) {
    
    this.walletableId = walletableId;
    return this;
  }

   /**
   * 口座ID
   * minimum: 1
   * maximum: 2147483647
   * @return walletableId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", required = true, value = "口座ID")

  public Integer getWalletableId() {
    return walletableId;
  }


  public void setWalletableId(Integer walletableId) {
    this.walletableId = walletableId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountItemsResponseAccountItems accountItemsResponseAccountItems = (AccountItemsResponseAccountItems) o;
    return Objects.equals(this.accountCategory, accountItemsResponseAccountItems.accountCategory) &&
        Objects.equals(this.accountCategoryId, accountItemsResponseAccountItems.accountCategoryId) &&
        Objects.equals(this.available, accountItemsResponseAccountItems.available) &&
        Objects.equals(this.categories, accountItemsResponseAccountItems.categories) &&
        Objects.equals(this.correspondingExpenseId, accountItemsResponseAccountItems.correspondingExpenseId) &&
        Objects.equals(this.correspondingExpenseName, accountItemsResponseAccountItems.correspondingExpenseName) &&
        Objects.equals(this.correspondingIncomeId, accountItemsResponseAccountItems.correspondingIncomeId) &&
        Objects.equals(this.correspondingIncomeName, accountItemsResponseAccountItems.correspondingIncomeName) &&
        Objects.equals(this.defaultTaxCode, accountItemsResponseAccountItems.defaultTaxCode) &&
        Objects.equals(this.defaultTaxId, accountItemsResponseAccountItems.defaultTaxId) &&
        Objects.equals(this.groupName, accountItemsResponseAccountItems.groupName) &&
        Objects.equals(this.id, accountItemsResponseAccountItems.id) &&
        Objects.equals(this.name, accountItemsResponseAccountItems.name) &&
        Objects.equals(this.shortcut, accountItemsResponseAccountItems.shortcut) &&
        Objects.equals(this.shortcutNum, accountItemsResponseAccountItems.shortcutNum) &&
        Objects.equals(this.taxCode, accountItemsResponseAccountItems.taxCode) &&
        Objects.equals(this.walletableId, accountItemsResponseAccountItems.walletableId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountCategory, accountCategoryId, available, categories, correspondingExpenseId, correspondingExpenseName, correspondingIncomeId, correspondingIncomeName, defaultTaxCode, defaultTaxId, groupName, id, name, shortcut, shortcutNum, taxCode, walletableId);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountItemsResponseAccountItems {\n");
    sb.append("    accountCategory: ").append(toIndentedString(accountCategory)).append("\n");
    sb.append("    accountCategoryId: ").append(toIndentedString(accountCategoryId)).append("\n");
    sb.append("    available: ").append(toIndentedString(available)).append("\n");
    sb.append("    categories: ").append(toIndentedString(categories)).append("\n");
    sb.append("    correspondingExpenseId: ").append(toIndentedString(correspondingExpenseId)).append("\n");
    sb.append("    correspondingExpenseName: ").append(toIndentedString(correspondingExpenseName)).append("\n");
    sb.append("    correspondingIncomeId: ").append(toIndentedString(correspondingIncomeId)).append("\n");
    sb.append("    correspondingIncomeName: ").append(toIndentedString(correspondingIncomeName)).append("\n");
    sb.append("    defaultTaxCode: ").append(toIndentedString(defaultTaxCode)).append("\n");
    sb.append("    defaultTaxId: ").append(toIndentedString(defaultTaxId)).append("\n");
    sb.append("    groupName: ").append(toIndentedString(groupName)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    shortcut: ").append(toIndentedString(shortcut)).append("\n");
    sb.append("    shortcutNum: ").append(toIndentedString(shortcutNum)).append("\n");
    sb.append("    taxCode: ").append(toIndentedString(taxCode)).append("\n");
    sb.append("    walletableId: ").append(toIndentedString(walletableId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

