/*
 * freee API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package jp.co.freee.accounting.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * PartnerCreateParamsAddressAttributes
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class PartnerCreateParamsAddressAttributes {
  public static final String SERIALIZED_NAME_PREFECTURE_CODE = "prefecture_code";
  @SerializedName(SERIALIZED_NAME_PREFECTURE_CODE)
  private Integer prefectureCode;

  public static final String SERIALIZED_NAME_STREET_NAME1 = "street_name1";
  @SerializedName(SERIALIZED_NAME_STREET_NAME1)
  private String streetName1;

  public static final String SERIALIZED_NAME_STREET_NAME2 = "street_name2";
  @SerializedName(SERIALIZED_NAME_STREET_NAME2)
  private String streetName2;

  public static final String SERIALIZED_NAME_ZIPCODE = "zipcode";
  @SerializedName(SERIALIZED_NAME_ZIPCODE)
  private String zipcode;

  public PartnerCreateParamsAddressAttributes() { 
  }

  public PartnerCreateParamsAddressAttributes prefectureCode(Integer prefectureCode) {
    
    this.prefectureCode = prefectureCode;
    return this;
  }

   /**
   * 都道府県コード（-1: 設定しない、0: 北海道、1:青森、2:岩手、3:宮城、4:秋田、5:山形、6:福島、7:茨城、8:栃木、9:群馬、10:埼玉、11:千葉、12:東京、13:神奈川、14:新潟、15:富山、16:石川、17:福井、18:山梨、19:長野、20:岐阜、21:静岡、22:愛知、23:三重、24:滋賀、25:京都、26:大阪、27:兵庫、28:奈良、29:和歌山、30:鳥取、31:島根、32:岡山、33:広島、34:山口、35:徳島、36:香川、37:愛媛、38:高知、39:福岡、40:佐賀、41:長崎、42:熊本、43:大分、44:宮崎、45:鹿児島、46:沖縄
   * minimum: -1
   * maximum: 46
   * @return prefectureCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "4", value = "都道府県コード（-1: 設定しない、0: 北海道、1:青森、2:岩手、3:宮城、4:秋田、5:山形、6:福島、7:茨城、8:栃木、9:群馬、10:埼玉、11:千葉、12:東京、13:神奈川、14:新潟、15:富山、16:石川、17:福井、18:山梨、19:長野、20:岐阜、21:静岡、22:愛知、23:三重、24:滋賀、25:京都、26:大阪、27:兵庫、28:奈良、29:和歌山、30:鳥取、31:島根、32:岡山、33:広島、34:山口、35:徳島、36:香川、37:愛媛、38:高知、39:福岡、40:佐賀、41:長崎、42:熊本、43:大分、44:宮崎、45:鹿児島、46:沖縄")

  public Integer getPrefectureCode() {
    return prefectureCode;
  }


  public void setPrefectureCode(Integer prefectureCode) {
    this.prefectureCode = prefectureCode;
  }


  public PartnerCreateParamsAddressAttributes streetName1(String streetName1) {
    
    this.streetName1 = streetName1;
    return this;
  }

   /**
   * 市区町村・番地（255文字以内）
   * @return streetName1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "ＸＸ区ＹＹ１−１−１", value = "市区町村・番地（255文字以内）")

  public String getStreetName1() {
    return streetName1;
  }


  public void setStreetName1(String streetName1) {
    this.streetName1 = streetName1;
  }


  public PartnerCreateParamsAddressAttributes streetName2(String streetName2) {
    
    this.streetName2 = streetName2;
    return this;
  }

   /**
   * 建物名・部屋番号など（255文字以内）
   * @return streetName2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "ビル１Ｆ", value = "建物名・部屋番号など（255文字以内）")

  public String getStreetName2() {
    return streetName2;
  }


  public void setStreetName2(String streetName2) {
    this.streetName2 = streetName2;
  }


  public PartnerCreateParamsAddressAttributes zipcode(String zipcode) {
    
    this.zipcode = zipcode;
    return this;
  }

   /**
   * 郵便番号（8文字以内）
   * @return zipcode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "000-0000", value = "郵便番号（8文字以内）")

  public String getZipcode() {
    return zipcode;
  }


  public void setZipcode(String zipcode) {
    this.zipcode = zipcode;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PartnerCreateParamsAddressAttributes partnerCreateParamsAddressAttributes = (PartnerCreateParamsAddressAttributes) o;
    return Objects.equals(this.prefectureCode, partnerCreateParamsAddressAttributes.prefectureCode) &&
        Objects.equals(this.streetName1, partnerCreateParamsAddressAttributes.streetName1) &&
        Objects.equals(this.streetName2, partnerCreateParamsAddressAttributes.streetName2) &&
        Objects.equals(this.zipcode, partnerCreateParamsAddressAttributes.zipcode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(prefectureCode, streetName1, streetName2, zipcode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PartnerCreateParamsAddressAttributes {\n");
    sb.append("    prefectureCode: ").append(toIndentedString(prefectureCode)).append("\n");
    sb.append("    streetName1: ").append(toIndentedString(streetName1)).append("\n");
    sb.append("    streetName2: ").append(toIndentedString(streetName2)).append("\n");
    sb.append("    zipcode: ").append(toIndentedString(zipcode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

