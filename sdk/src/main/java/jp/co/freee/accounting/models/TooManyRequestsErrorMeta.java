/*
 * freee API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package jp.co.freee.accounting.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * TooManyRequestsErrorMeta
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class TooManyRequestsErrorMeta {
  public static final String SERIALIZED_NAME_LIMIT = "limit";
  @SerializedName(SERIALIZED_NAME_LIMIT)
  private Integer limit;

  public static final String SERIALIZED_NAME_PERIOD = "period";
  @SerializedName(SERIALIZED_NAME_PERIOD)
  private Integer period;

  public static final String SERIALIZED_NAME_REMAINING = "remaining";
  @SerializedName(SERIALIZED_NAME_REMAINING)
  private Integer remaining;

  public static final String SERIALIZED_NAME_RESET = "reset";
  @SerializedName(SERIALIZED_NAME_RESET)
  private String reset;

  public TooManyRequestsErrorMeta() { 
  }

  public TooManyRequestsErrorMeta limit(Integer limit) {
    
    this.limit = limit;
    return this;
  }

   /**
   * 設定されている上限値
   * @return limit
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "100", required = true, value = "設定されている上限値")

  public Integer getLimit() {
    return limit;
  }


  public void setLimit(Integer limit) {
    this.limit = limit;
  }


  public TooManyRequestsErrorMeta period(Integer period) {
    
    this.period = period;
    return this;
  }

   /**
   * 使用回数をカウントする期間 (秒)
   * @return period
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "5", value = "使用回数をカウントする期間 (秒)")

  public Integer getPeriod() {
    return period;
  }


  public void setPeriod(Integer period) {
    this.period = period;
  }


  public TooManyRequestsErrorMeta remaining(Integer remaining) {
    
    this.remaining = remaining;
    return this;
  }

   /**
   * 上限に達するまでの使用可能回数
   * @return remaining
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "0", required = true, value = "上限に達するまでの使用可能回数")

  public Integer getRemaining() {
    return remaining;
  }


  public void setRemaining(Integer remaining) {
    this.remaining = remaining;
  }


  public TooManyRequestsErrorMeta reset(String reset) {
    
    this.reset = reset;
    return this;
  }

   /**
   * （上限値に達した場合）使用回数がリセットされる時刻
   * @return reset
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "2019-12-17T18:30:24+09:00", required = true, value = "（上限値に達した場合）使用回数がリセットされる時刻")

  public String getReset() {
    return reset;
  }


  public void setReset(String reset) {
    this.reset = reset;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TooManyRequestsErrorMeta tooManyRequestsErrorMeta = (TooManyRequestsErrorMeta) o;
    return Objects.equals(this.limit, tooManyRequestsErrorMeta.limit) &&
        Objects.equals(this.period, tooManyRequestsErrorMeta.period) &&
        Objects.equals(this.remaining, tooManyRequestsErrorMeta.remaining) &&
        Objects.equals(this.reset, tooManyRequestsErrorMeta.reset);
  }

  @Override
  public int hashCode() {
    return Objects.hash(limit, period, remaining, reset);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TooManyRequestsErrorMeta {\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    period: ").append(toIndentedString(period)).append("\n");
    sb.append("    remaining: ").append(toIndentedString(remaining)).append("\n");
    sb.append("    reset: ").append(toIndentedString(reset)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

